library(RCurl) # for loading external dataset (getBinaryURL)
library(R.utils) # for bunzip2
library(plyr) # for count & aggregate method
library(reshape2) # for melt
library(ggplot2) # for plots
library(grid) # for grids
library(gridExtra) # for advanced plots
library(scales) # for plot scaling
setwd("~/GitHub/reproductive-research-peer2")
data <- read.csv(file="repdata-data-StormData.csv",header=TRUE)
colout <- data[c("BGN_DATE", "EVTYPE", "FATALITIES", "INJURIES", "PROPDMG", "PROPDMGEXP", "CROPDMG", "CROPDMGEXP")]
colout$PROPDMGEXP <- mapvalues(colout$PROPDMGEXP, from = c("H", "K","M","B"), to = c(100, 1000,1000000,
1000000000))
colout$PROPDMGEXP <- as.numeric(as.character(colout$PROPDMGEXP))
colout$PROPDMGEXP <- colout$PROPDMG * colout$PROPDMGEXP
colout$CROPDMGEXP <- mapvalues(colout$CROPDMGEXP, from = c("?","","H", "K","M","B"), to = c(0,0,100, 1000,1000000,
1000000000))
colout$CROPDMGEXP <- as.numeric(as.character(colout$CROPDMGEXP))
colout$CROPDMGEXP <- colout$CROPDMG * colout$CROPDMGEXP
fatal_events <- head(casualties[order(casualties$fatalities, decreasing = T), ], 10)
injury_events <- head(casualties[order(casualties$injuries, decreasing = T), ], 10)
crop_damages <- head(aggdata[order(aggdata$CROPDMGEXP, decreasing = T), ], 10)
prop_damages <- head(aggdata[order(aggdata$PROPDMGEXP, decreasing = T), ], 10)
library(ggplot2)
aggdata <- aggregate(cbind(FATALITIES, INJURIES,PROPDMG, PROPDMGEXP, CROPDMG, CROPDMGEXP) ~ EVTYPE, colout, sum,na.rm=TRUE)
fatal_events <- head(aggdata[order(casualties$fatalities, decreasing = T), ], 10)
injury_events <- head(aggdata[order(casualties$injuries, decreasing = T), ], 10)
crop_damages <- head(aggdata[order(aggdata$CROPDMGEXP, decreasing = T), ], 10)
prop_damages <- head(aggdata[order(aggdata$PROPDMGEXP, decreasing = T), ], 10)
fatal_events <- head(aggdata[order(aggdata$FATALITIES, decreasing = T), ], 10)
injury_events <- head(aggdata[order(aggdata$INJURIES, decreasing = T), ], 10)
crop_damages <- head(aggdata[order(aggdata$CROPDMGEXP, decreasing = T), ], 10)
prop_damages <- head(aggdata[order(aggdata$PROPDMGEXP, decreasing = T), ], 10)
library(ggplot2)
p1 <- ggplot(data=crop_damages,
aes(x=reorder(EVTYPE, FATALITIES), y=FATALITIES, fill=FATALITIES)) +
geom_histogram(stat="identity") +
ylab("Total number of property damagies") +
xlab("Event type") +
theme(legend.position="none")
p2 <- ggplot(data=crop_damages,
aes(x=reorder(EVTYPE, INJURIES), y=INJURIES, fill=INJURIES)) +
geom_histogram(stat="identity") +
ylab("Total number of crop damagies") +
xlab("Event type") +
theme(legend.position="none")
multiplot(p1,p2)
multiplot <- function(..., plotlist = NULL, file, cols = 1, layout = NULL) {
require(grid)
plots <- c(list(...), plotlist)
numPlots = length(plots)
if (is.null(layout)) {
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots == 1) {
print(plots[[1]])
} else {
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
for (i in 1:numPlots) {
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
library(ggplot2)
p1 <- ggplot(data=crop_damages,
aes(x=reorder(EVTYPE, FATALITIES), y=FATALITIES, fill=FATALITIES)) +
geom_histogram(stat="identity") +
ylab("Total number of property damagies") +
xlab("Event type") +
theme(legend.position="none")
p2 <- ggplot(data=crop_damages,
aes(x=reorder(EVTYPE, INJURIES), y=INJURIES, fill=INJURIES)) +
geom_histogram(stat="identity") +
ylab("Total number of crop damagies") +
xlab("Event type") +
theme(legend.position="none")
multiplot(p1,p2)
library(ggplot2)
p3 <- ggplot(data=crop_damages,
aes(x=reorder(EVTYPE, PROPDMGEXP), y=PROPDMGEXP, fill=PROPDMGEXP)) +
geom_histogram(stat="identity") +
ylab("Total number of property damagies") +
xlab("Event type") +
theme(legend.position="none")
p4 <- ggplot(data=crop_damages,
aes(x=reorder(EVTYPE, CROPDMGEXP), y=CROPDMGEXP, fill=CROPDMGEXP)) +
geom_histogram(stat="identity") +
ylab("Total number of crop damagies") +
xlab("Event type") +
theme(legend.position="none")
multiplot(p3,p4)
